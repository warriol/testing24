import { test, expect } from '@playwright/test';
import { UserHelper } from '../../../helpers/utils/userHelper';

test('Test Case utiles: Crear usuario de prueba', async ({ page }) => {
  /*const userHelper = new UserHelper();

  await page.goto('https://automationexercise.com/');
  await expect(page.getByRole('link', { name: 'Home' })).toBeVisible();
  await page.getByRole('link', { name: 'Signup / Login' }).click();
  await expect(page.locator('#form')).toContainText('New User Signup!');
  await page.getByPlaceholder('Name').click();
  await page.getByPlaceholder('Name').fill(await userHelper.getUser());
  await page.getByPlaceholder('Name').press('Tab');
  await page.locator('form').filter({ hasText: 'Signup' }).getByPlaceholder('Email Address').fill(await userHelper.getCorreo());
  await page.getByRole('button', { name: 'Signup' }).click();
  await expect(page.locator('#form')).toContainText('Enter Account Information');
  await page.getByLabel('Mr.').check();
  await page.getByLabel('Password *').click();
  await page.getByLabel('Password *').fill(await userHelper.getPassword());
  await page.locator('#days').selectOption('8');
  await page.locator('#months').selectOption('2');
  await page.locator('#years').selectOption('1980');
  await page.getByLabel('Sign up for our newsletter!').check();
  await page.getByLabel('Receive special offers from').check();
  await page.getByLabel('First name *').click();
  await page.getByLabel('First name *').fill(await userHelper.getFName());
  await page.getByLabel('First name *').press('Tab');
  await page.getByLabel('Last name *').fill(await userHelper.getLName());
  await page.getByLabel('Last name *').press('Tab');
  await page.getByLabel('Company', { exact: true }).fill('utu');
  await page.getByLabel('Address * (Street address, P.').click();
  await page.getByLabel('Address * (Street address, P.').fill('rivera sin numero');
  await page.getByLabel('Address 2').click();
  await page.getByLabel('Address 2').fill('italia sin numero');
  await page.getByLabel('Country *').selectOption('Singapore');
  await page.getByLabel('State *').click();
  await page.getByLabel('State *').fill('singapore');
  await page.getByLabel('City *').click();
  await page.getByLabel('City *').fill('singapore');
  await page.locator('#zipcode').click();
  await page.locator('#zipcode').fill('12456');
  await page.getByLabel('Mobile Number *').click();
  await page.getByLabel('Mobile Number *').fill('123456789');
  await page.getByRole('button', { name: 'Create Account' }).click();
  await expect(page.locator('b')).toContainText('Account Created!');
  await page.getByRole('link', { name: 'Continue' }).click();
  await expect(page.locator('#header')).toContainText('Logged in as testing012024');
  await page.getByRole('link', { name: 'Logout' }).click();
  console.log('Usuario creado correctamente, fin del caso de prueba 0.');*/
});